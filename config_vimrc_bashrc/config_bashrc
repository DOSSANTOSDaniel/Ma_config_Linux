# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


################################################## 

### Alias perso ###
# SSH
alias oli='ssh -o "ServerAliveInterval 60" -X -p 2244 mangkone@87.88.200.33'
alias duino='ssh root@192.168.0.111'
alias pve1='ssh root@192.168.0.21'
alias omv='ssh root@192.168.0.121'
alias rasp='ssh -p 2022 daniel@192.168.0.113'
alias next='ssh daniel@192.168.0.112'

# Wake on lan
alias pveon='wakeonlan e8:40:f2:d6:71:8c'

# Update
alias maj='sudo apt update && sudo apt full-upgrade --allow-downgrades -y && sudo apt autoremove --purge -y && sudo apt autoclean && sudo snap refresh && sudo flatpak update -y && echo -e "\n MAJ OK ! \n"'

# Secu
alias rm='rm -i'
alias mv='mv -b'
alias cp='cp -b'


### Functions perso ###
cpoli() {
  rsync -avrz -e 'ssh -p 2244' --progress --partial --stats ${1} mangkone@87.88.200.33:/home/mangkone
}

olicp() {
  rsync -avrz -e 'ssh -p 2244' --progress --partial --stats mangkone@87.88.200.33:/home/mangkone/${1} /home/daniel/
}

pong() {
  if [[ $(ping -c 1 google.fr) ]]
  then
    echo -e "\t\t\t\t !¡! Ping OK !¡! \n"
  else
    if [[ $(ping -c 1 8.8.8.8) ]]
    then
      echo -e "\t\t\t\t !¡!¡!¡!¡ << Erreur: DNS >> !¡!¡!¡!¡ \n"
    else
      echo -e "\t\t\t\t !¡!¡!¡!¡ << Erreur: Connexion Internet ADSL >> !¡!¡!¡!¡ \n"
    fi
  fi
}

banner() {
  echo -e "\n"
  echo -e "\t\t\t\t $(/bin/date)"
  echo
  echo "Login: ${LOGNAME}"
  echo
  echo "Host: ${HOSTNAME}"
  echo
  echo "IP: $(hostname -I)"
  echo
  echo "Bash: ${BASH_VERSION}"
  echo
  echo "Kernel: $(cat /proc/sys/kernel/osrelease)"
  echo
  uptime | cut -d " " -f10-15
  echo
  df -h -t ext4
}

### Prompt perso ###

if [ "$EUID" -eq 0 ]
then
  hostname_color='\[\033[1;31m\]'
  user_color='\[\033[1;31m\]'
  symbol=💀
  brackets_color='\[\033[32m\]'
  dir_color='\[\033[1;33m\]'
else
  hostname_color='\[\033[34m\]'
  user_color='\[\033[32m\]'
  symbol=🐧
  brackets_color='\[\033[1;31m\]'
  dir_color='\[\033[1;33m\]'
fi

PS0='\n'
PS1='\n'\
${brackets_color}'┌──['\
${user_color}'\u'\
${symbol}\
${hostname_color}'\h'\
${brackets_color}']-('\
${dir_color}'\w'\
${brackets_color}')'\
'\n'${brackets_color}'│'\
'\n'${brackets_color}'└─'\
${dir_color}'\$ '


### Banner perso ###
banner
echo
echo "+-------------------------+----------------------+"
echo "|         Alias           |     Fonctions        |"
echo "+-------------------------+----------------------+"
echo "| maj    ---> Mise à jour | cpoli [File_dan] D>O |"
echo "| oli    ---> SSH         | olicp [File_oli] D<O |"
echo "| pve1   ---> SSH         | pong     Test réseau |"
echo "| omv    ---> SSH         | banner   Info sys    |"
echo "| duino  ---> SSH         +----------------------+"
echo "| rasp   ---> SSH         |"
echo "| next   ---> SSH         |"
echo "| pveon  ---> Wake On Lan |"
echo "+-------------------------+"
echo
pong
